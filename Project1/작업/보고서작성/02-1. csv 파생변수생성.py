# ============================================================================================
# 파이썬에서 패키지를 사용하도록 설정
# ============================================================================================
import pandas as pd # 분석용 파이썬 라이브러리 패키지
import numpy as np # 계산용 파이썬 라이브러리 패키지
# 위에 패키지들이 없으면 !pip install pandas, numpy 해주기

# ============================================================================================
# 데이터 셋 로딩하기 (csv 파일을 pandas의 데이터 프레임으로 불러오려면 pd.read_csv())
# ============================================================================================
oneperson = pd.read_csv("C:/BigData/work/R_Project/ch011/woman_households.csv", encoding="euc-kr")
oneperson # 로딩된 데이터 확인하기

# ============================================================================================
# null 값 확인
# ============================================================================================
oneperson.isnull()
# ============================================================================================
# CSV 파일 중 이름이 직관적이지 못한 열의 이름들을 제대로 바꿔줌
# ============================================================================================
oneperson.rename(columns = {'주택(거처)의 종류.1':'단독주택', '주택(거처)의 종류.2':'아파트',
                            '주택(거처)의 종류.3':'연립주택', '주택(거처)의 종류.4':'다세대주택',
                            '주택(거처)의 종류.5':'비거주용 건물내 주택'
                            }, inplace=True) 
# ============================================================================================
# loc를 써서 필요한 행과 열만 추출, 행에선 여자인 행만 추출하고 열에선 필요한 일부 열을 추출한다
# ============================================================================================
oneperson = oneperson.loc[oneperson["성별"]=="여자", ["자치구", "성별", "합계", "단독주택",
                                                  "아파트", "연립주택", "다세대주택", 
                                                  "비거주용 건물내 주택", "주택이외의 거처"]]

# ============================================================================================
# 면적당 여성 1인가구 수를 조사하기 위해 미리 조사한 면적을 추가 (단위 : km2, 서울시 구당 면적 참고)
# ============================================================================================
oneperson.insert(9,'면적', [605.23, 23.91, 9.96, 21.87, 16.86, 17.06, 14.22,
                         18.5, 24.58, 23.6, 20.65, 35.44, 29.71, 17.63, 23.85, 17.41,
                         41.44, 20.12, 13.02, 24.55, 16.35, 29.57, 46.98, 39.5, 33.87, 24.59])
# 9번째 열에 면적 구당 데이터 추가함
# womandata.info() # 타입확인
oneperson.dtypes # 데이터프레임 타입확인 (둘다 가능)
# ============================================================================================
# 면적당 값으로 계산하기위하여 같은 타입으로 바꿔주기 위한 작업
# ============================================================================================
oneperson['합계']= oneperson['합계'].str.replace(pat=r'[^\w]',repl=r'',regex=True) # 특수문자제거
oneperson['합계'] # 제대로 되었는지 결과를 확인

# ============================================================================================
# 결과값을 계산을 위하여 float 타입으로 타입 변환
# ============================================================================================
oneperson = oneperson.astype({'합계':'float64'})
oneperson.info() # 제대로 되었는지 타입을 확인
# ============================================================================================
# 결과값을 계산을 위하여 float 타입으로 타입 변환
# ============================================================================================
result = oneperson['합계'] / oneperson['면적']
result = round(result) # round(result,2) 라면 소숫점 두번째 자리까지만 출력
result
# ============================================================================================
# float으로 뜨는 .0을 없애기 위한 타입 변환
# ============================================================================================
result = result.astype('int') 
result.info

# ============================================================================================
# 계산한 값과 원본을 합쳐줌
# ============================================================================================
oneperson = pd.concat([oneperson, result], axis=1) # axis=1이 없으면 NaN 값으로 나옴
oneperson
# ============================================================================================
# 계산한 값이 들어간 컬럼명을 바꿔줌
# ============================================================================================
oneperson = oneperson.rename(columns = {0:'면적당 1인 가구 수'}) 
oneperson

# ============================================================================================
# 마지막으로, 필요한 컬럼만 추출해서 저장함
# ============================================================================================
oneperson = oneperson[["자치구", "면적당 1인 가구 수"]]
oneperson
# ============================================================================================
# 다른 데이터 셋과의 통합을 위해 컬럼명을 영어로 바꿔줌
# ============================================================================================
oneperson.rename(columns = {'자치구':'District', '면적당 1인 가구 수':'oneperson'}, inplace=True)
# true 안붙이면 복사본이 생성됨
oneperson
# ============================================================================================
# 다른 데이터 셋과의 통합을 위해 합계 부분의 열을 지워줌
# ============================================================================================
oneperson = oneperson.drop(index=[3]) # index 3 = 합계이다. 이 부분을 지움
oneperson
# ============================================================================================
# 다른 데이터 셋과의 통합을 위해 지역이름인 ㄱㄴㄷ 순으로 정렬해줌
# ============================================================================================
oneperson = oneperson.sort_values('District', ascending=True)
oneperson
# ============================================================================================
# 완성된 데이터 셋을 저장해줌
# ============================================================================================
oneperson.to_csv('Oneperson.csv', index=False, encoding="euc-kr")
# 앞에 숫자가 index인데 이걸 false로 하고 저장함, encoding euc-kr로 하면 깨지지 않음
